[["eda.html", "Chapter 2 Week 1 - Data manipulation and EDA 2.1 Introduction 2.2 Data types 2.3 Lists and data frames 2.4 Loading, viewing and summarising data 2.5 Data transformation with dplyr", " Chapter 2 Week 1 - Data manipulation and EDA 2.1 Introduction library(ISLR) library(tidyverse) library(haven) library(readxl) 2.2 Data types 2.2.1 Exercise 1 object_1 &lt;- 1:5 object_2 &lt;- 1L:5L object_3 &lt;- &quot;-123.456&quot; object_4 &lt;- as.numeric(object_2) object_5 &lt;- letters[object_1] object_6 &lt;- as.factor(rep(object_5, 2)) object_7 &lt;- c(1, 2, 3, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;) 2.2.2 Exercise 2 as.numeric(object_7) ## [1] 1 2 3 4 5 6 2.3 Lists and data frames 2.3.1 Exercise 3 objects &lt;- mget(ls(pattern = &quot;^object_\\\\d{1}$&quot;), .GlobalEnv) 2.3.2 Exercise 4 df &lt;- data.frame(object_1, object_2, object_5) 2.3.3 Exercise 5 ncol(df) ## [1] 3 nrow(df) ## [1] 5 2.4 Loading, viewing and summarising data 2.4.1 Exercise 6 apps &lt;- read_csv(&quot;data/googleplaystore.csv&quot;) 2.4.2 Exercise 7 Yes, the variables size, installs and price could have been numeric variables, rather than character variables. 2.4.3 Exercise 8 knitr::kable(head(apps[,-1]), booktabs = T) %&gt;% kableExtra::kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;)) Category Rating Reviews Size Installs Type Price Content Rating Genres Last Updated Current Ver Android Ver ART_AND_DESIGN 4.1 159 19M 10,000+ Free 0 Everyone Art &amp; Design January 7, 2018 1.0.0 4.0.3 and up ART_AND_DESIGN 3.9 967 14M 500,000+ Free 0 Everyone Art &amp; Design;Pretend Play January 15, 2018 2.0.0 4.0.3 and up ART_AND_DESIGN 4.7 87510 8.7M 5,000,000+ Free 0 Everyone Art &amp; Design August 1, 2018 1.2.4 4.0.3 and up ART_AND_DESIGN 4.5 215644 25M 50,000,000+ Free 0 Teen Art &amp; Design June 8, 2018 Varies with device 4.2 and up ART_AND_DESIGN 4.3 967 2.8M 100,000+ Free 0 Everyone Art &amp; Design;Creativity June 20, 2018 1.1 4.4 and up ART_AND_DESIGN 4.4 167 5.6M 50,000+ Free 0 Everyone Art &amp; Design March 26, 2017 1.0 2.3 and up 2.4.4 Exercise 9 students &lt;- readxl::read_xlsx(&quot;data/students.xlsx&quot;) students$student_number &lt;- as.character(students$student_number) head(students) %&gt;% kable() %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;)) student_number grade programme 5117250 6.540712 A 6562582 7.572885 A 6000241 6.081056 B 4862862 7.707184 A 6561723 6.573150 B 5625916 7.900654 B 2.4.5 Exercise 10 summary(students) ## student_number grade programme ## Length:37 Min. :4.844 Length:37 ## Class :character 1st Qu.:6.390 Class :character ## Mode :character Median :7.151 Mode :character ## Mean :6.991 ## 3rd Qu.:7.573 ## Max. :9.291 2.5 Data transformation with dplyr 2.5.1 Exercise 11 students %&gt;% filter(grade &lt; 5.5) ## # A tibble: 3 x 3 ## student_number grade programme ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 6114656 5.16 A ## 2 5265402 5.49 B ## 3 4639846 4.84 A 2.5.2 Exercise 12 students %&gt;% filter(grade &gt; 8 &amp; programme == &quot;A&quot;) ## # A tibble: 5 x 3 ## student_number grade programme ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 6352581 8.09 A ## 2 6165611 8.02 A ## 3 4133949 8.40 A ## 4 4011659 8.94 A ## 5 6553913 8.24 A 2.5.3 Exercise 13 students %&gt;% arrange(programme, desc(grade)) ## # A tibble: 37 x 3 ## student_number grade programme ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 4011659 8.94 A ## 2 4133949 8.40 A ## 3 6553913 8.24 A ## 4 6352581 8.09 A ## 5 6165611 8.02 A ## 6 6997130 7.75 A ## 7 4862862 7.71 A ## 8 6562582 7.57 A ## 9 4483974 7.46 A ## 10 5128923 7.26 A ## # … with 27 more rows 2.5.4 Exercise 14 students %&gt;% select(student_number, programme) ## # A tibble: 37 x 2 ## student_number programme ## &lt;chr&gt; &lt;chr&gt; ## 1 5117250 A ## 2 6562582 A ## 3 6000241 B ## 4 4862862 A ## 5 6561723 B ## 6 5625916 B ## 7 4096023 A ## 8 6114656 A ## 9 5265402 B ## 10 5977188 B ## # … with 27 more rows 2.5.5 Exercise 15 students_recoded &lt;- students %&gt;% mutate(programme = recode(programme, &quot;A&quot; = &quot;Science&quot;, &quot;B&quot; = &quot;Social Science&quot;)) 2.5.6 Exercise 16 popular_apps &lt;- read_csv(&quot;data/googleplaystore.csv&quot;) %&gt;% mutate(Installs = parse_number(Installs)) %&gt;% filter(Installs &gt; 500000000) %&gt;% arrange(desc(Rating)) %&gt;% select(Category, Rating, Reviews, Size, Installs, Type, Price) 2.5.7 Exercise 17 popular_apps %&gt;% summarise_if(is.numeric, .funs = list(median = median, min = min, max = max)) ## # A tibble: 1 x 9 ## Rating_median Reviews_median Installs_median Rating_min Reviews_min ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 4.3 9642554. 1000000000 3.7 877635 ## # … with 4 more variables: Installs_min &lt;dbl&gt;, Rating_max &lt;dbl&gt;, ## # Reviews_max &lt;dbl&gt;, Installs_max &lt;dbl&gt; 2.5.8 Exercise 18 mad &lt;- function(x) median(abs(x - median(x))) popular_apps %&gt;% summarise_if(is.numeric, .funs = list(median = median, min = min, max = max, mad = mad)) ## # A tibble: 1 x 12 ## Rating_median Reviews_median Installs_median Rating_min Reviews_min ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 4.3 9642554. 1000000000 3.7 877635 ## # … with 7 more variables: Installs_min &lt;dbl&gt;, Rating_max &lt;dbl&gt;, ## # Reviews_max &lt;dbl&gt;, Installs_max &lt;dbl&gt;, Rating_mad &lt;dbl&gt;, Reviews_mad &lt;dbl&gt;, ## # Installs_mad &lt;dbl&gt; 2.5.9 Exercise 19 popular_apps %&gt;% group_by(Category) %&gt;% summarise(mean = mean(Rating), median = median(Rating), sd = sd(Rating), min = min(Rating), max = max(Rating), mad = mad(Rating)) ## `summarise()` ungrouping output (override with `.groups` argument) ## # A tibble: 12 x 7 ## Category mean median sd min max mad ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 BOOKS_AND_REFERENCE 3.9 3.9 NA 3.9 3.9 0 ## 2 COMMUNICATION 4.17 4.1 0.163 4 4.4 0.100 ## 3 ENTERTAINMENT 4.3 4.3 NA 4.3 4.3 0 ## 4 FAMILY 4.3 4.3 NA 4.3 4.3 0 ## 5 GAME 4.5 4.5 0 4.5 4.5 0 ## 6 NEWS_AND_MAGAZINES 3.9 3.9 0 3.9 3.9 0 ## 7 PHOTOGRAPHY 4.5 4.5 0 4.5 4.5 0 ## 8 PRODUCTIVITY 4.4 4.4 0 4.4 4.4 0 ## 9 SOCIAL 4.32 4.35 0.191 4.1 4.5 0.15 ## 10 TOOLS 4.4 4.4 0 4.4 4.4 0 ## 11 TRAVEL_AND_LOCAL 4.26 4.3 0.0548 4.2 4.3 0 ## 12 VIDEO_PLAYERS 4.1 4.3 0.346 3.7 4.3 0 "]]
